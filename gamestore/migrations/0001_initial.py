# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-03-06 08:53
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='game name')),
                ('URL', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z~\\.\\-_]+$', 'Only alphanumeric characters and ~/./-/_ are allowed.')], verbose_name='game path (on our site)')),
                ('gameSource', models.URLField(max_length=300, unique=True, verbose_name='game source URL')),
                ('isPublic', models.BooleanField(default=False, verbose_name='is the game public? (You can always change this later)')),
                ('genre', models.CharField(choices=[('Action', 'Action'), ('Adventure', 'Adventure'), ('Fighting', 'Fighting'), ('Multiplayer', 'Multiplayer'), ('Platform', 'Platform'), ('Puzzle', 'Puzzle'), ('Racing', 'Racing'), ('RPG', 'RPG'), ('Shooter', 'Shooter'), ('Simulation', 'Simulation'), ('Sports', 'Sports'), ('Strategy', 'Strategy'), ('Other', 'Other')], default='Other', max_length=30)),
                ('description', models.TextField(blank=True)),
                ('image', models.URLField(blank=True, verbose_name='URL to image of game')),
                ('image2', models.URLField(blank=True, verbose_name='secondary image URL')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=7, verbose_name='price (â‚¬)')),
                ('createDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('updateDate', models.DateTimeField(auto_now=True, null=True)),
                ('developer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GameSave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamestore.Game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GamesOwned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentState', models.TextField(choices=[('success', 'Success'), ('error', 'Error'), ('cancel', 'Canceled'), ('dev', 'Developer'), ('in_progress', 'In Progress'), ('not_started', 'Not started')], default='not_started')),
                ('createDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('updateDate', models.DateTimeField(auto_now=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamestore.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Highscore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamestore.Game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserExtension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isDeveloper', models.BooleanField(default=False, editable=False)),
                ('isValidated', models.BooleanField(default=False, editable=False)),
                ('ownedGames', models.ManyToManyField(to='gamestore.GamesOwned')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
